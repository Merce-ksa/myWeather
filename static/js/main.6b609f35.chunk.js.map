{"version":3,"sources":["reportWebVitals.js","components/Header/Header.jsx","services/weatherLocation.js","services/api.config.js","services/weatherFetcher.js","utils/dateFormater.js","utils/unitsFormater.js","index.jsx","components/Home/Home.jsx","components/Weather/Weather.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","dataLocation","useLocation","useState","cityName","setCityName","metric","setMetric","imperial","setImperial","className","type","id","placeholder","value","name","onChange","event","target","to","pathname","state","units","onClick","WeatherLocation","coord","summary","sunrise","sunset","icon","wind","this","openweathermapConfig","appId","process","a","axios","get","res","data","main","sys","weather","weatherFetcher","dateFormater","date","Date","toLocaleString","unitsFormater","metricSystem","magnitude","ReactDOM","render","path","exact","component","required","setWeatherData","useEffect","weatherData","undefined","lat","lon","src","alt","temp","toFixed","feels_like","temp_min","temp_max","pressure","humidity","speed","style","transform","deg","document","getElementById"],"mappings":"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","file":"static/js/main.6b609f35.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport './Header.css';\nimport '../../assets/fonts/icofont.css';\n\nexport default function Header() {\n  const dataLocation = useLocation();\n\n  const [cityName, setCityName] = useState('');\n  const [metric, setMetric] = useState(true);\n  const [imperial, setImperial] = useState(false);\n\n  function toggleMetric() {\n    setMetric(true);\n    setImperial(false);\n  }\n\n  function toggleImperial() {\n    setMetric(false);\n    setImperial(true);\n  }\n\n  return (\n    <header>\n      <div className=\"header-wrap\">\n        <div className=\"search-wrap\">\n          <input\n            type=\"text\"\n            id=\"searcher-header\"\n            className=\"input-header\"\n            placeholder=\"Search by location\"\n            value={cityName}\n            name=\"cityName\"\n            onChange={(event) => setCityName(event.target.value)}\n          />\n          <Link to={{\n            pathname: '/weather',\n            state: {\n              cityName: `${cityName}`,\n              units: metric ? 'metric' : 'imperial'\n            }\n          }}\n          >\n            <span className=\"icofont-search-1\" />\n          </Link>\n        </div>\n        <ul key=\"units\" className=\"measurement-units\">\n          <li className={metric ? 'units-list--active units-list' : 'units-list'}>\n            <Link\n              className={metric ? 'units-btn--active units-btn' : 'units-btn '}\n              onClick={toggleMetric}\n              to={{\n                pathname: '/weather',\n                state: {\n                  cityName: !cityName ? `${dataLocation.state.cityName}` : `${cityName}`,\n                  units: 'metric'\n                }\n              }}\n            >\n              Metric: ºC, m/s\n            </Link>\n          </li>\n          <li className={imperial ? 'units-list--active units-list' : 'units-list'}>\n            <Link\n              className={imperial ? 'units-btn--active units-btn' : 'units-btn '}\n              onClick={toggleImperial}\n              to={{\n                pathname: '/weather',\n                state: {\n                  cityName: !cityName ? `${dataLocation.state.cityName}` : `${cityName}`,\n                  units: 'imperial'\n                }\n              }}\n            >\n              Imperial: ºF, mph\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </header>\n  );\n}\n","class WeatherLocation {\n  constructor(cityName, coord, summary, sunrise, sunset, icon, wind) {\n    this.cityName = cityName;\n    this.coord = coord;\n    this.summary = summary;\n    this.sunrise = sunrise;\n    this.sunset = sunset;\n    this.icon = icon;\n    this.wind = wind;\n  }\n}\n\nexport default WeatherLocation;\n","const openweathermapConfig = {\n  appId: process.env.REACT_APP_appId\n};\n\nexport default openweathermapConfig;\n","import axios from 'axios';\nimport WeatherLocation from './weatherLocation';\nimport openweathermapConfig from './api.config';\n\nasync function weatherFetcher(cityName, units) {\n  return axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&&lang=sp&units=${units}&appid=${openweathermapConfig.appId}`)\n    .then((res) => new WeatherLocation(\n      res.data.name,\n      res.data.coord,\n      res.data.main,\n      res.data.sys.sunrise,\n      res.data.sys.sunset,\n      res.data.weather[0].icon,\n      res.data.wind\n    ));\n}\n\nexport default weatherFetcher;\n","function dateFormater(date) {\n  return new Date(date * 1000).toLocaleString();\n}\n\nexport default dateFormater;\n","function unitsFormater(metricSystem, magnitude) {\n  if (metricSystem === 'metric') {\n    switch (magnitude) {\n      case 'speed':\n        return 'm/s';\n      default:\n        return 'ºC';\n    }\n  } else {\n    switch (magnitude) {\n      case 'speed':\n        return 'mph';\n      default:\n        return 'ºF';\n    }\n  }\n}\n\nexport default unitsFormater;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/styles/index.css';\nimport Home from './components/Home/Home';\nimport Weather from './components/Weather/Weather';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/weather/\" component={Weather} />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\n\nexport default function Home() {\n  const [cityName, setCityName] = useState('');\n\n  return (\n    <main key=\"searcher-content\" className=\"searcher-content\">\n      <div className=\"searcher\">\n        <h1 className=\"searcher__title\">myWeather</h1>\n        <div className=\"searcher__form\">\n          <input\n            type=\"text\"\n            id=\"searcher\"\n            className=\"location\"\n            value={cityName}\n            name=\"cityName\"\n            onChange={(event) => setCityName(event.target.value)}\n            placeholder=\"Search by location\"\n            required\n          />\n          <div className=\"form-button\">\n            <Link\n              to={{\n                pathname: '/weather',\n                state: { cityName: `${cityName}`, units: 'metric' }\n              }}\n              className=\"search\"\n            >\n              Search\n\n            </Link>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Weather.css';\nimport Header from '../Header/Header';\nimport weatherFetcher from '../../services/weatherFetcher';\nimport dateFormater from '../../utils/dateFormater';\nimport unitsFormater from '../../utils/unitsFormater';\n\nexport default function Weather() {\n  const [weather, setWeatherData] = useState();\n\n  const dataLocation = useLocation();\n  const { cityName, units } = dataLocation.state;\n\n  useEffect(() => {\n    weatherFetcher(cityName, units).then((weatherData) => {\n      setWeatherData(weatherData);\n    });\n  }, [cityName, units]);\n\n  if (weather !== undefined) {\n    return (\n      <main>\n        <Header />\n\n        <section className=\"main-weather-detail\">\n          <div className=\"title-brand\">\n            <h1>myWeather</h1>\n          </div>\n          <div className=\"head-wrap\">\n            <p className=\"city-title\">{weather.cityName}</p>\n            <div className=\"coordinates\">\n              <p className=\"latitude\">{`lat ${weather.coord.lat}`}</p>\n              <p className=\"longitude\">{`lon ${weather.coord.lon}`}</p>\n            </div>\n          </div>\n          <div className=\"body-wrap\">\n            <div className=\"weather-resum\">\n              <img src={`http://openweathermap.org/img/wn/${weather.icon}@4x.png`} alt=\"resum-weather\" />\n              <p className=\"temp-resum\">{`${weather.summary.temp.toFixed(1)} ${unitsFormater(units, 'temperature')}`}</p>\n            </div>\n            <ul key=\"temperature\" className=\"temperature-list\">\n              <li>\n                <span>Feel</span>\n                <p>\n                  {`${weather.summary.feels_like.toFixed(1)} ${unitsFormater(units, 'temperature')}`}\n                </p>\n              </li>\n              <li>\n                <span>Min</span>\n                <p>{`${weather.summary.temp_min.toFixed(1)} ${unitsFormater(units, 'temperature')}`}</p>\n              </li>\n              <li>\n                <span>Max</span>\n                <p>{`${weather.summary.temp_max.toFixed(1)} ${unitsFormater(units, 'temperature')}`}</p>\n              </li>\n              <li>\n                <span>Pressure</span>\n                <p>{`${weather.summary.pressure} hPa`}</p>\n              </li>\n              <li>\n                <span>Humidity</span>\n                <p>{`${weather.summary.humidity} %`}</p>\n              </li>\n            </ul>\n            <ul key=\"hours-of-light\" className=\"hours-of-light\">\n              <li>\n                <span className=\"icofont-sun-rise\" />\n                <p>{dateFormater(weather.sunrise)}</p>\n              </li>\n              <li>\n                <span className=\"icofont-sun-set\" />\n                <p>{dateFormater(weather.sunset)}</p>\n              </li>\n            </ul>\n            <ul key=\"wind\" className=\"wind\">\n              <li>\n                <p>{`${weather.wind.speed} ${unitsFormater(units, 'speed')}`}</p>\n                <div\n                  className=\"wind-direction\"\n                  style={{ transform: `rotate(${weather.wind.deg}deg)` }}\n                >\n                  <span>➤</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div />\n        </section>\n      </main>\n    );\n  }\n  return (\n    null\n  );\n}\n"],"sourceRoot":""}